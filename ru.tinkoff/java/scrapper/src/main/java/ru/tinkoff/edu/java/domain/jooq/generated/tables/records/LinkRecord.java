/*
 * This file is generated by jOOQ.
 */
package ru.tinkoff.edu.java.domain.jooq.generated.tables.records;


import java.beans.ConstructorProperties;
import java.time.LocalDateTime;

import javax.annotation.processing.Generated;

import org.jetbrains.annotations.NotNull;
import org.jetbrains.annotations.Nullable;
import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record7;
import org.jooq.Row7;
import org.jooq.impl.UpdatableRecordImpl;

import ru.tinkoff.edu.java.domain.jooq.generated.tables.Link;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.17.6"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class LinkRecord extends UpdatableRecordImpl<LinkRecord> implements Record7<Long, Long, String, LocalDateTime, LocalDateTime, Integer, Integer> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.link.link_id_pk</code>.
     */
    public void setLinkIdPk(@NotNull Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.link.link_id_pk</code>.
     */
    @NotNull
    public Long getLinkIdPk() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>public.link.chat_id</code>.
     */
    public void setChatId(@NotNull Long value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.link.chat_id</code>.
     */
    @jakarta.validation.constraints.NotNull
    @NotNull
    public Long getChatId() {
        return (Long) get(1);
    }

    /**
     * Setter for <code>public.link.uri</code>.
     */
    public void setUri(@NotNull String value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.link.uri</code>.
     */
    @jakarta.validation.constraints.NotNull
    @NotNull
    public String getUri() {
        return (String) get(2);
    }

    /**
     * Setter for <code>public.link.last_checked_at</code>.
     */
    public void setLastCheckedAt(@NotNull LocalDateTime value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.link.last_checked_at</code>.
     */
    @jakarta.validation.constraints.NotNull
    @NotNull
    public LocalDateTime getLastCheckedAt() {
        return (LocalDateTime) get(3);
    }

    /**
     * Setter for <code>public.link.last_activity_at</code>.
     */
    public void setLastActivityAt(@Nullable LocalDateTime value) {
        set(4, value);
    }

    /**
     * Getter for <code>public.link.last_activity_at</code>.
     */
    @Nullable
    public LocalDateTime getLastActivityAt() {
        return (LocalDateTime) get(4);
    }

    /**
     * Setter for <code>public.link.issue_count</code>.
     */
    public void setIssueCount(@Nullable Integer value) {
        set(5, value);
    }

    /**
     * Getter for <code>public.link.issue_count</code>.
     */
    @Nullable
    public Integer getIssueCount() {
        return (Integer) get(5);
    }

    /**
     * Setter for <code>public.link.answer_count</code>.
     */
    public void setAnswerCount(@Nullable Integer value) {
        set(6, value);
    }

    /**
     * Getter for <code>public.link.answer_count</code>.
     */
    @Nullable
    public Integer getAnswerCount() {
        return (Integer) get(6);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    @NotNull
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record7 type implementation
    // -------------------------------------------------------------------------

    @Override
    @NotNull
    public Row7<Long, Long, String, LocalDateTime, LocalDateTime, Integer, Integer> fieldsRow() {
        return (Row7) super.fieldsRow();
    }

    @Override
    @NotNull
    public Row7<Long, Long, String, LocalDateTime, LocalDateTime, Integer, Integer> valuesRow() {
        return (Row7) super.valuesRow();
    }

    @Override
    @NotNull
    public Field<Long> field1() {
        return Link.LINK.LINK_ID_PK;
    }

    @Override
    @NotNull
    public Field<Long> field2() {
        return Link.LINK.CHAT_ID;
    }

    @Override
    @NotNull
    public Field<String> field3() {
        return Link.LINK.URI;
    }

    @Override
    @NotNull
    public Field<LocalDateTime> field4() {
        return Link.LINK.LAST_CHECKED_AT;
    }

    @Override
    @NotNull
    public Field<LocalDateTime> field5() {
        return Link.LINK.LAST_ACTIVITY_AT;
    }

    @Override
    @NotNull
    public Field<Integer> field6() {
        return Link.LINK.ISSUE_COUNT;
    }

    @Override
    @NotNull
    public Field<Integer> field7() {
        return Link.LINK.ANSWER_COUNT;
    }

    @Override
    @NotNull
    public Long component1() {
        return getLinkIdPk();
    }

    @Override
    @NotNull
    public Long component2() {
        return getChatId();
    }

    @Override
    @NotNull
    public String component3() {
        return getUri();
    }

    @Override
    @NotNull
    public LocalDateTime component4() {
        return getLastCheckedAt();
    }

    @Override
    @Nullable
    public LocalDateTime component5() {
        return getLastActivityAt();
    }

    @Override
    @Nullable
    public Integer component6() {
        return getIssueCount();
    }

    @Override
    @Nullable
    public Integer component7() {
        return getAnswerCount();
    }

    @Override
    @NotNull
    public Long value1() {
        return getLinkIdPk();
    }

    @Override
    @NotNull
    public Long value2() {
        return getChatId();
    }

    @Override
    @NotNull
    public String value3() {
        return getUri();
    }

    @Override
    @NotNull
    public LocalDateTime value4() {
        return getLastCheckedAt();
    }

    @Override
    @Nullable
    public LocalDateTime value5() {
        return getLastActivityAt();
    }

    @Override
    @Nullable
    public Integer value6() {
        return getIssueCount();
    }

    @Override
    @Nullable
    public Integer value7() {
        return getAnswerCount();
    }

    @Override
    @NotNull
    public LinkRecord value1(@NotNull Long value) {
        setLinkIdPk(value);
        return this;
    }

    @Override
    @NotNull
    public LinkRecord value2(@NotNull Long value) {
        setChatId(value);
        return this;
    }

    @Override
    @NotNull
    public LinkRecord value3(@NotNull String value) {
        setUri(value);
        return this;
    }

    @Override
    @NotNull
    public LinkRecord value4(@NotNull LocalDateTime value) {
        setLastCheckedAt(value);
        return this;
    }

    @Override
    @NotNull
    public LinkRecord value5(@Nullable LocalDateTime value) {
        setLastActivityAt(value);
        return this;
    }

    @Override
    @NotNull
    public LinkRecord value6(@Nullable Integer value) {
        setIssueCount(value);
        return this;
    }

    @Override
    @NotNull
    public LinkRecord value7(@Nullable Integer value) {
        setAnswerCount(value);
        return this;
    }

    @Override
    @NotNull
    public LinkRecord values(@NotNull Long value1, @NotNull Long value2, @NotNull String value3, @NotNull LocalDateTime value4, @Nullable LocalDateTime value5, @Nullable Integer value6, @Nullable Integer value7) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached LinkRecord
     */
    public LinkRecord() {
        super(Link.LINK);
    }

    /**
     * Create a detached, initialised LinkRecord
     */
    @ConstructorProperties({ "linkIdPk", "chatId", "uri", "lastCheckedAt", "lastActivityAt", "issueCount", "answerCount" })
    public LinkRecord(@NotNull Long linkIdPk, @NotNull Long chatId, @NotNull String uri, @NotNull LocalDateTime lastCheckedAt, @Nullable LocalDateTime lastActivityAt, @Nullable Integer issueCount, @Nullable Integer answerCount) {
        super(Link.LINK);

        setLinkIdPk(linkIdPk);
        setChatId(chatId);
        setUri(uri);
        setLastCheckedAt(lastCheckedAt);
        setLastActivityAt(lastActivityAt);
        setIssueCount(issueCount);
        setAnswerCount(answerCount);
    }

    /**
     * Create a detached, initialised LinkRecord
     */
    public LinkRecord(ru.tinkoff.edu.java.domain.jooq.generated.tables.pojos.Link value) {
        super(Link.LINK);

        if (value != null) {
            setLinkIdPk(value.getLinkIdPk());
            setChatId(value.getChatId());
            setUri(value.getUri());
            setLastCheckedAt(value.getLastCheckedAt());
            setLastActivityAt(value.getLastActivityAt());
            setIssueCount(value.getIssueCount());
            setAnswerCount(value.getAnswerCount());
        }
    }
}
